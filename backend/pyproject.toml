[tool.black]
line-length = 100
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 100

[tool.setuptools]
packages = ["folde", "app", "rq_util", "notebooks", "migrations"]

# BasedPyright settings in pyproject.toml are ignored if we set pyrightconfig.json.
# [tool.pyright]
# pythonVersion = "3.12"
# include = ["backend"]
# exclude = [
#     "**/node_modules",
#     "**/__pycache__",
# ]
# typeCheckingMode = "basic"
# reportMissingImports = false
# reportMissingTypeStubs = false
# useLibraryCodeForTypes = true
# reportOptionalMemberAccess = false
# reportOptionalSubscript = false
# reportOptionalCall = false
# reportOptionalIterable = false
# reportOptionalContextManager = false
# reportOptionalOperand = false
# reportUnknownMemberType = false
# reportUnknownArgumentType = false
# reportUnknownParameterType = false
#
# # Test-specific settings - more permissive
# [[tool.pyright.overrides]]
# files = ["src/**/tests/**", "src/**/test_*.py"]
# reportUnknownMemberType = false
# reportAttributeAccessIssue = false
# reportCallIssue = false
# reportArgumentType = false

# Handle pandas-specific issues in data-heavy modules
[[tool.pyright.overrides]]
files = ["folde/few_shot_models.py", "folde/util.py"]
reportArgumentType = false
reportCallIssue = false


[project]
name = "foldy-backend"
version = "0.1.0"
description = "Foldy backend services"
authors = [
    {name = "Jacob Roberts", email = "jbr@lbl.gov"}
]
requires-python = ">=3.12,<3.13"
dependencies = [
    # Web / API layers
    "Flask==2.3.3",
    "flask-restx==1.3.0",
    "Flask-JWT-Extended==4.7.1",
    "Flask-Compress==1.17",
    "flask-cors==5.0.1",
    "Flask-SQLAlchemy==3.1.1",
    "Flask-Migrate==4.1.0",
    "premailer",
    "markdown",
    "gunicorn",
    "fastapi==0.115.11",
    "uvicorn==0.34.0",

    # Task queue
    "rq==2.1.0",
    "rq-scheduler==0.14.0",
    "redis==5.2.1",
    "rq_dashboard",
    "flask_admin==1.6.1",
    "wtforms==3.1.2",  # https://github.com/pallets-eco/flask-admin/issues/2546
    "environs",
    "docker==7.1.0",

    # Persistence / migrations
    "SQLAlchemy==2.0.38",
    "alembic==1.15.1",
    "psycopg2-binary==2.9.10",
    "python-dotenv==1.0.1",

    # Auth & OAuth
    "Authlib==1.5.1",

    # Cloud storage
    "google-cloud-storage==3.1.0",

    # Data / numerics / plotting
    "numpy==1.26.0",
    "pandas==2.2.2",
    "scipy==1.15.2",
    "scikit-learn==1.6.1",
    "seaborn==0.13.2",
    "matplotlib==3.10.1",
    "dask==2025.2.0",
    "Pillow==11.1.0",
    "dnachisel",
    "openpyxl",
    "xlrd>=2.0.1",

    # Misc runtime utils
    "requests==2.32.3",
    "pyyaml==6.0.2",
    "tenacity==9.0.0",
    "python-dateutil==2.9.0.post0",
    "pytz",
    "pynvml",
    "psutil",

    # Jupyter / notebook tools
    "jupyter==1.1.1",
    "jupyterlab==4.3.5",
    "ipykernel==6.29.5",
    "ipywidgets==8.1.5",
    "tqdm==4.67.1",
    "statannotations==0.7.2",
]

[project.optional-dependencies]
dev = [
    # Dev / QA tools
    "black==25.1.0",
    "isort==6.0.1",
    "pylint==3.3.5",
    "mypy==1.15.0",
    "pandas-stubs==2.2.3.250308",
    "pytest==8.3.5",
    "freezegun==1.5.1",
    "factory_boy==3.3.3",
    "Faker==37.0.0",
    "coverage==7.6.12",
    "pytest-watch==4.2.0",
    "levenshtein==0.27.1",

    "pre-commit",
    "pip-tools",

    # ML/GPU dependencies from worker conda environment (setup.sh)
    "torch>=2.2.0,<2.3.0",
    "torchvision>=0.17.0,<0.18.0",
    "torchaudio>=2.2.0,<2.3.0",
    "gpytorch>=1.14.0,<1.15.0",
    "botorch>=0.14.0,<0.15.0",
    "linear_operator>=0.6.0,<0.7.0",
    "pyro-ppl>=1.8.4",
]
